{"version":3,"sources":["components/Chart.js","components/Summary.js","pages/BTC.js","components/elements/Select.js","components/StockChart.js","pages/StockMarket.js","components/Navbar.js","App.js","index.js"],"names":["Chart","props","fData","data","title","fDailyData","dates","Object","keys","sort","newData","values","reverse","labels","datasets","map","label","borderColor","borderWidth","backgroundColor","fill","Summary","copy","newD","latest","className","start","end","parseInt","duration","separator","BTC","useState","getData","getAllData","a","url","process","axios","get","response","useEffect","Select","value","onChange","style","height","width","fontSize","disabled","option","StockChart","API_KEY","StockMarket","key","setKey","stockData","setStockData","selectValue","setSelectValue","company","setCompany","handleSubmit","e","preventDefault","symbol","handleSelect","target","onSubmit","type","placeholder","bestMatches","Navbar","to","App","basename","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.663370d6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Chart = (props) => {\n  const fData = { ...props.data };\n  const fTitle = { ...fData[\"Meta Data\"] };\n  const title = fTitle[\"4. Market Code\"]; // FOR DATASETS.LABEL\n  const fDailyData = { ...fData[\"Time Series (Digital Currency Weekly)\"] };\n  const dates = Object.keys(fDailyData);\n  dates.sort(); // FOR LABELS\n  const newData = Object.values(fDailyData);\n  newData.reverse(); // FOR DATASETS.DATA\n\n  return (\n    <Line\n      data={{\n        labels: dates,\n        datasets: [\n          {\n            data: newData.map((data) => data[\"2a. high (PHP)\"]),\n            label: title ? title : \"Loading data...\",\n            borderColor: \"#00ccff\",\n            borderWidth: 2,\n            backgroundColor: \"rgba(0,204,255,0.1)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport CountUp from \"react-countup\";\n\nconst Summary = (props) => {\n  let data = { ...props.data };\n  let copy = { ...data[\"Time Series (Digital Currency Weekly)\"] };\n  let newD = Object.keys(copy);\n  let asd = { ...copy[newD[0]] };\n  let latest = asd[\"2a. high (PHP)\"];\n\n  if (latest) {\n    return (\n      <div className=\"header\">\n        <h1>\n          1BTC = &#8369;\n          {\n            <CountUp\n              start={0}\n              end={latest ? parseInt(latest) : 0}\n              duration={1.5}\n              separator=\",\"\n            />\n          }\n        </h1>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Loading data...</h1>\n      </div>\n    );\n  }\n};\n\nexport default Summary;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport Chart from \"../components/Chart\";\nimport Summary from \"../components/Summary\";\nimport axios from \"axios\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst REACT_APP_API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst BTC = () => {\n  const [data, getData] = useState({});\n\n  const getAllData = async () => {\n    const url = `${REACT_APP_API_BASE_URL}/query?function=DIGITAL_CURRENCY_WEEKLY&symbol=BTC&market=PHP&apikey=${API_KEY}`;\n\n    let response = await axios.get(url);\n    let data = response.data;\n    getData(data);\n  };\n\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Summary data={data} />\n      <Chart data={data} />\n    </Fragment>\n  );\n};\n\nexport default BTC;\n","import React from \"react\";\n\nconst Select = ({ value, onChange, data, label }) => {\n  return (\n    <select\n      style={{ height: \"50px\", width: \"550px\", fontSize: \"1.5em\" }}\n      value={value}\n      onChange={onChange}\n    >\n      <option value=\"0\" disabled>\n        {label}\n      </option>\n      {data?.map((option) => (\n        <option key={option[\"1. symbol\"]} value={option[\"1. symbol\"]}>\n          [{option[\"1. symbol\"]}] {option[\"2. name\"]}\n        </option>\n      )) || null}\n    </select>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst StockChart = ({ data }) => {\n  const fData = { ...data };\n  const fTitle = { ...fData[\"Meta Data\"] };\n  const title = fTitle[\"2. Symbol\"];\n\n  const fDailyData = { ...fData[\"Time Series (Daily)\"] };\n  const dates = Object.keys(fDailyData);\n  dates.sort();\n  const newData = Object.values(fDailyData);\n  newData.reverse();\n\n  return (\n    <Line\n      data={{\n        labels: dates,\n        datasets: [\n          {\n            data: newData.map((data) => data[\"2. high\"]),\n            label: title || \"Loading data...\",\n            borderColor: \"#00ccff\",\n            borderWidth: 2,\n            backgroundColor: \"rgba(0,204,255,0.1)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  );\n};\n\nexport default StockChart;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Select from \"../components/elements/Select\";\nimport StockChart from \"../components/StockChart\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst REACT_APP_API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst StockMarket = () => {\n  const [key, setKey] = useState(\"\");\n  const [stockData, setStockData] = useState({});\n  const [selectValue, setSelectValue] = useState(\"\");\n  const [company, setCompany] = useState({});\n\n  const getAllData = async (url) => {\n    let response = await axios.get(url);\n    let data = response.data;\n    return data;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const url = `${REACT_APP_API_BASE_URL}/query?function=SYMBOL_SEARCH&keywords=${key}&apikey=${API_KEY}`;\n    let data = await getAllData(url);\n    if (data) {\n      setStockData(data);\n      setKey(\"\");\n    }\n  };\n\n  const getData = async (symbol) => {\n    const url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${symbol}&outputsize=compact&apikey=${API_KEY}`;\n\n    let response = await axios.get(url);\n    let data = response.data;\n    return data;\n  };\n\n  const handleSelect = async (e) => {\n    let symbol = e.target.value;\n    setSelectValue(symbol);\n    let company = await getData(symbol);\n    setCompany(company);\n  };\n\n  return (\n    <div className=\"stockmarket\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter company name\"\n          style={{ width: \"500px\", height: \"50px\", fontSize: \"2em\" }}\n          value={key}\n          onChange={(e) => setKey(e.target.value)}\n        />\n        <button\n          style={{ height: \"50px\", width: \"50px\", fontSize: \"2em\" }}\n          type=\"submit\"\n        >\n          <i className=\"fas fa-search-dollar\" />\n        </button>\n      </form>\n      {stockData?.bestMatches ? (\n        <Select\n          value={selectValue}\n          onChange={handleSelect}\n          data={stockData?.bestMatches}\n          label=\"Select company\"\n        />\n      ) : (\n        <Select label=\"No company selected\" />\n      )}\n      <StockChart data={company} />\n    </div>\n  );\n};\n\nexport default StockMarket;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Navbar.css'\n\nfunction Navbar() {\n    return (\n        <nav className=\"navbar\">\n            <h1 className=\"navbar-logo\"><span className=\"spanwhite\">CARL</span>EDWARD</h1>\n            <ul className=\"nav-menu\">\n                <Link to='/'>\n                    <li className=\"nav-links\">\n                        <div className='div-link'>\n                            Bitcoin\n                        </div>\n                    </li>\n                </Link>\n                <Link to='/stockmarket'>\n                    <li className=\"nav-links\">\n                        <div className='div-link'>\n                            Stock Market\n                        </div>\n                    </li>\n                </Link>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar","import React from \"react\";\nimport BTC from \"./pages/BTC\";\nimport StockMarket from \"./pages/StockMarket\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL + \"/\"}>\n      <div className=\"container\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={BTC} />\n          <Route path=\"/stockmarket\" component={StockMarket} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}